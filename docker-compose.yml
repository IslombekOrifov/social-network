services:
  web:
    container_name: social_web
    image: social-network-web:latest
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    env_file:
      - .env
    ports:
      - "8001:8000"
    depends_on:
      db:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    volumes:
      - social_static_volume:/app/static
      - social_media_volume:/app/media
    restart: always
  db:
    container_name: social_db
    image: postgres:15
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - social_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  # redis:
  #   container_name: social_redis
  #   image: redis:7-alpine
  #   ports:
  #     - "6380:6379"
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #   restart: always


volumes:
  social_postgres_data:
    name: social_postgres_data
  social_static_volume:
    name: social_static_volume
  social_media_volume:
    name: social_media_volume